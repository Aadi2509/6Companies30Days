//Solution Accepted in GFG

// Initial Template for C++


#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
//User function Template for C++
class Solution{
    public:
    
    long long int  dp[1001][1001];
    
    long long int numOfWays(int n, int x)
    {
        // code here
        long int val=0;
        vector<int> v;
        int i=1;
        while(val<n){
            val=pow(i,x);
            v.push_back(val);
            i++;
        }
        
        if(v[v.size()-1]>n){
            v.pop_back();
        }
        
       
        
        // for(int i=0;i<v.size();i++){
        //     cout<<v[i]<<" ";
        // }
        
        for(int i=0;i<n+1;i++){
            dp[0][i]=0;
        }
        
        for(int i=0;i<v.size()+1;i++){
            dp[i][0]=1;
        }
        
        for(int i=1;i<v.size()+1;i++){
            for(int j=1;j<n+1;j++){
                if(v[i-1]<=j){
                    dp[i][j]=(dp[i-1][j-v[i-1]]+dp[i-1][j])%1000000007;
                }else{
                    dp[i][j]=dp[i-1][j];
                }
            }
        }
        
        

        
        return dp[v.size()][n]%1000000007;
    }
};

// { Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int  n, x;
        cin >> n >> x;
        Solution ob;
        cout<<ob.numOfWays(n, x)<<endl;
    }
    return 0;
}
  // } Driver Code Ends
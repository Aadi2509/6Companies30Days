//Solution accepted in GFG

#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
class Solution{

  public:
	int minDifference(int arr[], int n)  { 
	    // Your code goes here
	    int range=0;
	    int mn=INT_MAX;
	    
	    for(int i=0;i<n;i++){
	        range=range+arr[i];
	        //cout<<range;
	    }
	    //cout<<" ";
	    
	    bool dp[n+1][range+1];
	    
	    for(int i=0;i<range+1;i++){
	        dp[0][i]=false;
	    }
	    for(int i=0;i<n+1;i++){
	        dp[i][0]=true;
	    }
	    
	    
	    for(int i=1;i<n+1;i++){
	        for(int j=1;j<range+1;j++){
	            if(arr[i-1]<=j){
	                dp[i][j]=(dp[i-1][j-arr[i-1]])||(dp[i-1][j]);
	            }else{
	                dp[i][j]=dp[i-1][j];
	            }
	        }
	    }
	    
	    vector<int> v;
	    int i=0;
	    while(i<=range/2){
	        if(dp[n][i]==true && i<=range/2){
	            v.push_back(i);
	            //cout<<i<<" ";
	        }
	        i++;
	    }
	    
	    for(int j=0;j<v.size();j++){
	        //cout<<v[j]<<endl;
	        int val=range-(2*v[j]);
	        mn=min(mn,val);
	    }
	    
	    return mn;
	} 
};


// { Driver Code Starts.
int main() 
{
   
   
   	int t;
    cin >> t;
    while (t--)
    {
        int n;
        cin >> n;

        int a[n];
        for(int i = 0; i < n; i++)
        	cin >> a[i];

       

	    Solution ob;
	    cout << ob.minDifference(a, n) << "\n";
	     
    }
    return 0;
}  // } Driver Code Ends

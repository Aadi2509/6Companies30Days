//Solution Accepted in GFG


 // } Driver Code Ends
class Solution
{
    public:
    //Function to find unit area of the largest region of 1s.
     int checkForOne(vector<vector<int>> &grid,int i,int j){
        int M=grid.size();
        int N=grid[0].size();
        if(i<0 || j<0 || i>=M || j>=N){
            return 0;
        }
        if(grid[i][j]==0){
            return 0;
        }
        
        grid[i][j]=0;
        int sz=1;
        
        for(int r=i-1;r<=i+1;r++){
            for(int c=j-1;c<=j+1;c++){
                if(r!=i || c!=j){
                    sz+=checkForOne(grid,r,c);
                }
            }
        }
        
        return sz;
     }
    
    int findMaxArea(vector<vector<int>>& grid) {
            // Code here
        int mx=0;
        
        for(int i=0;i<grid.size();i++){
            for(int j=0;j<grid[0].size();j++){
                if(grid[i][j]==1){
                    int val=checkForOne(grid,i,j);
                    mx=max(mx,val);
                }
            }
        }
        
        return mx;
    }
};

// { Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		int n, m;
		cin >> n >> m;
		vector<vector<int>>grid(n, vector<int>(m, -1));
		for(int i = 0; i < n; i++){
			for(int j = 0; j < m; j++){
				cin >> grid[i][j];
			}
		}
		Solution obj;
		int ans = obj.findMaxArea(grid);
		cout << ans << "\n";
	}
	return 0;
}  // } Driver Code Ends
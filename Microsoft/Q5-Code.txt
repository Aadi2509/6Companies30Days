//Solution Accepted in GFG

#include<bits/stdc++.h>
using namespace std;


 // } Driver Code Ends



class Solution
{
    public:
    //Function to calculate the span of stockâ€™s price for all n days.
    vector <int> calculateSpan(int price[], int n)
    {
       // Your code here
       int i=0;
       vector<int> index;
       stack<pair<int,int>> stk;
       
       while(i<n){
           if(stk.size()==0){
               index.push_back(-1);
               stk.push({price[i],i});
               i++;
           }else{
               while(stk.size()>0 && stk.top().first<=price[i]){
                 stk.pop();
               }
               if(stk.size()==0){
                   index.push_back(-1);
               }
               else if(stk.top().first>price[i]){
                   index.push_back(stk.top().second);
               }
               
               stk.push({price[i],i});
               i++;
           }
       }
       
       vector<int> ans;
       for(int j=0;j<index.size();j++){
           ans.push_back(j-index[j]);
       }
       
       return ans;
    }
};



// { Driver Code Starts.

int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		int n;
		cin>>n;
		int i,a[n];
		for(i=0;i<n;i++)
		{
			cin>>a[i];
		}
		Solution obj;
		vector <int> s = obj.calculateSpan(a, n);
		
		for(i=0;i<n;i++)
		{
			cout<<s[i]<<" ";
		}
		cout<<endl;
	}
	return 0;
}
  // } Driver Code Ends
//Solution accepted in GFG

// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
// User function Template for C++

class Solution{
public:
    int isValid(vector<vector<int>> mat){
        // code here
        int box;
        string s;
        set<string> mp;
        
        for(int i=0;i<9;i++){
            for(int j=0;j<9;j++){
                if(mat[i][j]!=0){
                    s="Row"+to_string(i)+to_string(mat[i][j]);
                    if(mp.find(s)!=mp.end()){
                        return 0;
                    }else{
                        mp.insert(s);
                    }
                    
                    s="Col"+to_string(j)+to_string(mat[i][j]);
                    if(mp.find(s)!=mp.end()){
                        return 0;
                    }else{
                        mp.insert(s);
                    }
                    
                    s="Box"+to_string(((i/3)*3)+(j/3))+to_string(mat[i][j]);
                    if(mp.find(s)!=mp.end()){
                        return 0;
                    }else{
                        mp.insert(s);
                    }
                    
                }
            }
        }
        
        return 1;
    }
};

// { Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        vector<vector<int>> mat(9, vector<int>(9, 0));
        for(int i = 0;i < 81;i++)
            cin>>mat[i/9][i%9];
        
        Solution ob;
        cout<<ob.isValid(mat)<<"\n";
    }
    return 0;
}  // } Driver Code Ends
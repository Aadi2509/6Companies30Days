//solution Accepted in GFG

#include<bits/stdc++.h>
using namespace std;
const int MAX_DIGITS = 5;

int missingNumber(const string& str);

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        string str;
        cin>>str;
        cout << missingNumber(str)<<endl;
    }
	return 0;
}
// } Driver Code Ends


/* You are required to complete this function
which return the required missing number
if present else return -1*/
int convertSToI(string s){
    long long x=0;
    for(int i=0;i<s.length();i++){
        x=x*10+s[i]-'0';
    }
    
    return x;
}

int missingNumber(const string& str)
{
    // Code here
    for(int i=1;i<=6;i++){
        int len=i;
        int start=0;
        string temp="";
        while(start<str.length() && len--){
            temp+=str[start++];
        }
        long long prev=convertSToI(temp);
        temp="";
        long long j=start,count=0;
        long long flag=0;
        long long missing;
        while(j<str.length()){
            temp+=str[j++];
                
            if(prev+1==convertSToI(temp)){
                prev=convertSToI(temp);
                temp="";
            }else if(prev+2==convertSToI(temp)){
                count++;
                missing=prev+1;
                //cout<<missing;
                prev=convertSToI(temp);
                temp="";
            }else if(prev<convertSToI(temp)){
                flag=1;
            }
        }
            
        if(count==1 && flag==0){
            return missing;
        }
    }
    
    return -1;
    
}
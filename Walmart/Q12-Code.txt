//Solution accepted in leetcode

class Solution {
public:
    vector<int> recoverArray(int n, vector<int>& sums) {
        vector<int> ans;
        sort(sums.begin(),sums.end());
        for(int i=0;i<n;i++){
            unordered_map<int,int> mp;
            int diff=sums[1]-sums[0];
            int flag=0;
            vector<int> vect1;
            vector<int> vect2;
            for(int j=0;j<sums.size();j++){
                if(!mp[sums[j]]){
                    vect1.push_back(sums[j]);
                    mp[sums[j]+diff]++;
                    if(sums[j]==0){
                        flag=1;
                    }
                }else{
                    vect2.push_back(sums[j]);
                    mp[sums[j]]--;
                }
            }
            
            if(flag==1){
                sums=vect1;
                ans.push_back(diff);
            }else{
                sums=vect2;
                ans.push_back(-diff);
            }
        }
        
        return ans;
    }
};
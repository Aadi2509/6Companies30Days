//Solution Accepted in GFG

// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
// User function Template for C++

class Solution{
public:

    string solve(string s, int &i){
        int n=0;
        int index=i;
        while(s[i]!='['){
            
            i++;
        }
        
        n=stoi(s.substr(index,i-index));
        i++;
        string str="";
        
        while(s[i]!=']'){
            if(isdigit(s[i])){
                str+=solve(s,i);
                
            }else{
                str+=s[i];
                i++;
            }
        }
        i++;
        
        string newStr=str;
        for(int k=0;k<n-1;k++){
            str=str+newStr;
        }
        
        return str;
    }
    string decodedString(string s){
        // code here
        int i=0;
       return solve(s,i);
    }
};

// { Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        string s;
        cin>>s;
        
        Solution ob;
        cout<<ob.decodedString(s)<<"\n";
    }
    return 0;
}  // } Driver Code Ends